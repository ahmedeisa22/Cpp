#include <iostream>
#include <iomanip>
#include <cmath>
#include <string>
#include <cstdlib>
using namespace std;

/**********************************************************************************/
// my solution
/**********************************************************************************/

int ReadNumber(string str)
{
    int num;
    do
    {
        cout << str << endl;
        cin >> num;
    }
    while(num < 0);
    return num;
}

int RandomNumber (int From, int To )
{
    return rand()% (To - From) + From;
}


void ReadRandomArray(int arr[100],int len)
{
    for(int i = 0 ; i < len ; i++)
    {
        arr[i] = RandomNumber(1,100);
    }
}
void printArray(int arr[100],int N)
{
    for(int i = 0 ; i < N ; i++)
    {
        cout  <<arr[i] << " ";
    }
    cout << endl;
}

bool Prime(int n)
{
    for(int i = 2 ; i < n ; i++)
    {
        if(n % i == 0)
            return false;
    }
    return true;
}
int copyPrimeArray(int arr1[100], int arr2[100], int length)
{
    int indx = 0;
    for(int i = 0; i < length ; i++)
    {
        if(Prime(arr1[i]))
        {
            arr2[indx++] = arr1[i];

        }
    }
    return indx;
}

void sumOfArrays(int arr1[100], int arr2[100],int arrsum[100],int length)
{

    for(int i = 0 ; i < length ; i++)
    {
        arrsum[i] =  arr1[i] + arr2[i];
    }
}
main()
{
    ////seeds generator on random
    srand((unsigned)time(NULL));

    int length = ReadNumber("Enter length of Number you want: ");
    int arr1[100],arr2[100];
    ReadRandomArray(arr1,length);
    cout << "\n\nArray (1) Elements: ";
    printArray(arr1,length);

    ReadRandomArray(arr2,length);
    cout << "\nArray (2) Elements: ";
    printArray(arr2,length);

    int arrSum[100];
    sumOfArrays(arr1,arr2,arrSum,length);
    cout << "\nSum of array1 and array2 is: ";
    printArray(arrSum,length);

    cout << endl;
    return 0;
}

/**********************************************************************************/
// His solution
/**********************************************************************************/
