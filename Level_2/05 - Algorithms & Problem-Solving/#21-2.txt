#include <iostream>
#include <iomanip>
#include <cmath>
#include <string>
#include <cstdlib>
using namespace std;

/**********************************************************************************/
// my solution
/**********************************************************************************/
//int ReadNumber(string str)
//{
//    int num;
//    cout << str << endl;
//    cin >> num;
//    return num;
//}
//int randomNumber(int from, int to)
//{
//    int randNum  = rand() % (to-from) + from;
//    return randNum;
//}
//
//
//string generate_8_keys()
//{
//    string foursKeys ="";
//
//    for(int i = 1 ; i <= 16 ; i++)
//    {
//        foursKeys+=(char)randomNumber(65,90);
//
//        if(i == 4 || i == 8 || i==12 )
//            foursKeys += '-';
//    }
//    return foursKeys;
//}
//void printKeys(int n)
//{
//    for(int i = 1 ; i <= n ; i++)
//
//        cout << "Key ["<< i << "]:"<< generate_8_keys() << endl;
//
//}
//main()
//{
//     seeds generator on random
//    srand((unsigned)time(NULL));
//    int keys = ReadNumber("Enter how many keys to generate: ");
//    printKeys(keys);
//
//    return 0;
//}


/**********************************************************************************/
// His solution
/**********************************************************************************/
int RandomNumber(int From, int To)
{
    return rand() % (To - From) + From;
}

enum enCharType { SamallLetter = 1, CapitalLetter = 2, SpecialCharacter = 3, Digit = 4 };
char GetRandomCharacter (enCharType CharType)
{
    switch(CharType)
    {
    case enCharType::SamallLetter:
        return (char)RandomNumber(97,122);

    case enCharType::CapitalLetter:
        return (char)RandomNumber(65,90);

    case enCharType::SpecialCharacter:
        return (char)RandomNumber(33,47);

    case enCharType::Digit:
        return (char)RandomNumber(48,57);


    }
}
int ReadPositiveNumber(string Message)
{
    int Number = 0;
    do
    {
        cout << Message << endl;
        cin >> Number;
    }
    while (Number <= 0);
    return Number;
}

string GenerateWord(enCharType CharType,short length)
{
    string word = "";

    for(int i = 1 ; i <= length ; i++)
        word += GetRandomCharacter(CharType);

    return word;
}
string GenerateKey()
{
    string key = "";

    key += GenerateWord(enCharType::CapitalLetter,4) +'-';
    key += GenerateWord(enCharType::CapitalLetter,4) +'-';
    key += GenerateWord(enCharType::CapitalLetter,4) +'-';
    key += GenerateWord(enCharType::CapitalLetter,4);

    return key;
}
void GenerateKeys(short len)
{
    for(int i = 1 ; i <= len ; i++)
    {

        cout << "Key [" << i << "] : ";
        cout << GenerateKey() << endl;
    }
}
main()
{
    srand((unsigned)time(NULL));
   GenerateKeys(ReadPositiveNumber("Enter keys: "));


    return 0;
}
