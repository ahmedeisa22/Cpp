#include <iostream>
#include <iomanip>
#include <cmath>
#include <string>
#include <cstdlib>
using namespace std;

/**********************************************************************************/
// my solution
/**********************************************************************************/
//enum enGroups {smallLettet = 1, captialLetter = 2, specialCharcter = 3, digit =4};
//int randomNumber(int from, int to)
//{
//    int randNum  = rand() % (to-from) + from;
//    return randNum;
//}
//
//void printCases(enGroups en)
//{
//
//    if(en == enGroups::smallLettet)
//    {
//        cout << (char)randomNumber(97,122) << endl;;
//    }
//    else if(en == enGroups::captialLetter)
//    {
//        cout << (char)randomNumber(65,90)<<endl;
//    }
//    else if(en == enGroups::specialCharcter)
//    {
//        cout << (char)randomNumber(33,47)<<endl;
//    }
//    else if(en == enGroups::digit)
//    {
//        cout << (char)randomNumber(48,57)<<endl;
//    }
//}
//main()
//{
//    // seeds generator ot random
//    srand((unsigned)time(NULL));
//
//    printCases(enGroups::smallLettet);
//    printCases(enGroups::captialLetter);
//    printCases(enGroups::specialCharcter);
//    printCases(enGroups::digit);
//
//    return 0;
//}


/**********************************************************************************/
// His solution
/**********************************************************************************/
int RandomNumber(int From, int To)
{
    return rand() % (To - From) + From;
}

enum enCharType { SamallLetter = 1, CapitalLetter = 2, SpecialCharacter = 3, Digit = 4 };
char GetRandomCharacter (enCharType CharType)
{
    switch(CharType)
    {
    case enCharType::SamallLetter:
        return (char)RandomNumber(97,122);

    case enCharType::CapitalLetter:
        return (char)RandomNumber(65,90);

    case enCharType::SpecialCharacter:
        return (char)RandomNumber(33,47);

    case enCharType::Digit:
        return (char)RandomNumber(48,57);


    }
}
main()
{
    srand((unsigned)time(NULL));
    cout << GetRandomCharacter(enCharType::SamallLetter) << endl;
    cout << GetRandomCharacter(enCharType::CapitalLetter) << endl;
    cout << GetRandomCharacter(enCharType::SpecialCharacter) << endl;
    cout << GetRandomCharacter(enCharType::Digit) << endl;

    return 0;
}
